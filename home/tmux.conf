# Some of these settings came from [Brandur](https://mutelight.org/practical-tmux),
# but most of them come from the [Arch Wiki](http://wiki.archlinux.org/index.php/Tmux)
# and the [Tmux home page](http://tmux.sourceforge.net/).

# I also wanted a keyboard shortcut to switch to the previous screen, like
# exists by default in GNU `screen`.
bind-key C-a last-window

# To allow for instantaneous combinations of characters (e.g. to not have to
# pause between `C-b` and `n`), we need to tell `tmux` not to wait at all for
# an escape key.
set -s escape-time 0

# `tmux` gives an asterisk by default to the currently-selected window, but
# something a little more obvious is preferable, so I highlight it red.
set-window-option -g window-status-current-bg red

# I prefer to have a little fancier formatting for the window names as well.
set-option -g status-left "Tabs:"
set-window-option -g window-status-format " (#I) #W "
set-window-option -g window-status-current-format " (#I) #W "
set-window-option -g window-status-separator "|"

# In order to use keymaps configured in `rxvt-unicode` or the `xterm` defaults,
# I have to tell `tmux` to use them. This allows `Ctrl-Left` and `Ctrl-Right`
# to retreat and advance a word at a time, respectively.
set-window-option -g xterm-keys on

# I prefer tab-like window controls to the standard number-based ones. Here, the
# `-n` indicates that the escape command `C-b` is not required here.
bind -n S-left prev
bind -n S-right next
bind -n C-j prev
bind -n C-k next
bind -n C-M-j swap-window -t -1
bind -n C-M-k swap-window -t +1

